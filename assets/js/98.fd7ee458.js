(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{387:function(t,n,a){"use strict";a.r(n);var e=a(7),l=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("在java中，三元运算符是一种非常简洁的书写方式，但是其与传统的if-else语句相比，有一个很重要的特性：会对两个结果做交集类型的自动转换。 在处理数字类型时尤其需要注意。")]),t._v(" "),n("p",[t._v("下面通过一组简单的示例来了解该特性：")]),t._v(" "),n("p",[t._v("示例1，传统的if-else语句：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public static void test1(){\n        int i = 10;\n        float f = 2.0f;\n        boolean b = true;\n        Object value = null;\n        if(b){\n            value = i;\n        }else{\n            value = f;\n        }\n\n        System.out.println(value.getClass());\n    }\n\n输出结果：\nclass java.lang.Integer\n")])])]),n("p",[t._v("示例2，三元运算符：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public static void test2(){\n        int i = 10;\n        float f = 2.0f;\n        boolean b = true;\n        Object value = b ? i : f;\n\n        System.out.println(value.getClass());\n    }\n\n输出结果：\nclass java.lang.Float\n")])])]),n("p",[t._v("可以看到，在示例2中，三元运算符对两个结果做了交集类型的判断，并自动将int类型提升成为了float类型。")])])}),[],!1,null,null,null);n.default=l.exports}}]);